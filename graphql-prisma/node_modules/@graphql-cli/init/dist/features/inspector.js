"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.askForInspector = void 0;
const inquirer_1 = require("inquirer");
const common_1 = require("../common");
async function askForInspector({ context, project }) {
    if (context.type === common_1.ProjectType.FullStack || context.type === common_1.ProjectType.FrontendOnly) {
        const { isFrontendInspectorAsked } = await inquirer_1.prompt([
            {
                type: 'confirm',
                name: 'isFrontendInspectorAsked',
                message: 'Do you want to have GraphQL Inspector tools for your frontend?',
                default: true,
            },
        ]);
        if (isFrontendInspectorAsked) {
            project.addDependency('@graphql-cli/coverage');
            project.addDependency('@graphql-cli/validate');
            project.addScript('graphql:coverage', 'graphql coverage');
            project.addScript('graphql:validate', 'graphql validate');
        }
    }
    if (context.type === common_1.ProjectType.FullStack || context.type === common_1.ProjectType.BackendOnly) {
        const { isBackendInspectorAsked } = await inquirer_1.prompt([
            {
                type: 'confirm',
                name: 'isBackendInspectorAsked',
                message: 'Do you want to have GraphQL Inspector tools for your backend?',
                default: true,
            },
        ]);
        if (isBackendInspectorAsked) {
            project.addDependency('@graphql-cli/diff');
            project.addDependency('@graphql-cli/similar');
            project.addScript('graphql:diff', 'graphql diff');
            project.addScript('graphql:similar', 'graphql similar');
            if (!context.graphqlConfig.extensions.diff) {
                context.graphqlConfig.extensions.diff = {
                    baseSchema: 'your-base-schema-here',
                };
            }
        }
    }
}
exports.askForInspector = askForInspector;
//# sourceMappingURL=inspector.js.map